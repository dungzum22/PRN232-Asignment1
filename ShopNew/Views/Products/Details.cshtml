@model ShopNew.Models.Product

@{
    ViewData["Title"] = Model?.Name ?? "Product Details";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <nav aria-label="breadcrumb" class="mb-4">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a href="/Products">
                            <i class="fas fa-arrow-left me-1"></i>Products
                        </a>
                    </li>
                    <li class="breadcrumb-item active">@Model?.Name</li>
                </ol>
            </nav>

            <div class="card">
                <div class="row g-0">
                    <div class="col-md-5">
                        @if (!string.IsNullOrEmpty(Model?.ImageUrl))
                        {
                            <img src="@Model.ImageUrl" class="img-fluid rounded-start h-100" alt="@Model?.Name" style="object-fit: cover;">
                        }
                        else
                        {
                            <div class="bg-light d-flex align-items-center justify-content-center h-100 rounded-start">
                                <i class="fas fa-image fa-4x text-muted"></i>
                            </div>
                        }
                    </div>
                    <div class="col-md-7">
                        <div class="card-body">
                            <h3 class="card-title mb-3">@Model?.Name</h3>

                            <div class="mb-3">
                                <h5 class="text-primary mb-2">@Model?.Price.ToString("C")</h5>
                                <span class="badge bg-success">Available</span>
                            </div>

                            <div class="mb-4">
                                <h6>Description</h6>
                                <p class="text-muted">@(Model?.Description ?? "No description available.")</p>
                            </div>

                            <div class="d-flex gap-2 mb-3">
                                <form method="post" asp-action="AddToCart" asp-controller="Cart" class="add-to-cart-form" data-product-id="@Model.Id" style="display:inline;">
                                    <input type="hidden" name="productId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-success">
                                        <i class="fas fa-cart-plus me-1"></i>Add to Cart
                                    </button>
                                </form>
                            </div>

                            @if (User.IsInRole("Admin"))
                            {
                                <div class="d-flex gap-2">
                                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-warning btn-sm">
                                        <i class="fas fa-edit me-1"></i>Edit
                                    </a>
                                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger btn-sm">
                                        <i class="fas fa-trash me-1"></i>Delete
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.add-to-cart-form').forEach(function(form) {
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                const productId = this.dataset.productId;
                try {
                    const res = await fetch('/Cart/AddToCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: new URLSearchParams({ productId, quantity: 1 })
                    });
                    const data = await res.json();
                    if (!res.ok || !data.success) {
                        const message = data?.error || 'Failed to add to cart';
                        Swal.fire({ icon: 'error', title: 'Oops...', text: message, timer: 2000, showConfirmButton: false });
                        return;
                    }
                    Swal.fire({
                        toast: true,
                        position: 'top-end',
                        icon: 'success',
                        title: data.message || 'Added to cart',
                        showConfirmButton: false,
                        timer: 1500
                    });
                } catch (err) {
                    Swal.fire({ icon: 'error', title: 'Error', text: err.message, timer: 2000, showConfirmButton: false });
                }
            });
        });
    </script>
}
